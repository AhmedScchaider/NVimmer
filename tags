!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
<C-H>	nvim/init.vim	/^map <C-H> :bn<CR>            "下一个缓冲区$/;"	m
<C-L>	nvim/init.vim	/^map <C-L> :bp<CR>        "上一个缓冲区$/;"	m
<C-Left>	nvim/init.vim	/^map <C-Left> :bn<CR>            "下一个缓冲区$/;"	m
<C-O>	nvim/init.vim	/^map! <C-O> <C-Y>,$/;"	m
<C-Right>	nvim/init.vim	/^map <C-Right> :bp<CR>        "上一个缓冲区$/;"	m
<C-V>	nvim/init.vim	/^imap <C-V> <Esc>"+gp$/;"	m
<C-V>	nvim/init.vim	/^nmap <C-V> "+gp$/;"	m
<C-c>	nvim/init.vim	/^vnoremap <C-c> "+y$/;"	m
<C-x>	nvim/init.vim	/^vnoremap <C-x> "+x$/;"	m
<F12>	nvim/init.vim	/^noremap <F12> :syntax sync fromstart<CR>:Format<CR>$/;"	m
<F2>	nvim/init.vim	/^nnoremap <F2> :OmniSharpRename<CR>$/;"	m
<F2>	nvim/init.vim	/^nnoremap <F2> :g\/^\\s*$\/d<CR>:g\/\\s\\+$\/s<CR>$/;"	m
<F3>	nvim/init.vim	/^nmap <F3> :NERDTreeToggle<CR>$/;"	m
<F5>	nvim/init.vim	/^nmap <F5> :syntax sync fromstart<CR>:w<CR>$/;"	m
<F6>	nvim/init.vim	/^nmap <F6> :syntax sync fromstart<CR>:call Compile()<CR>$/;"	m
<F8>	nvim/init.vim	/^map <F8> :call Rungdb()<CR>$/;"	m
<F9>	nvim/init.vim	/^nmap <F9> :TagbarToggle<CR>$/;"	m
<Leader><Space>	nvim/init.vim	/^nnoremap <Leader><Space> :OmniSharpGetCodeActions<CR>$/;"	m
<Leader>cf	nvim/init.vim	/^nnoremap <Leader>cf :OmniSharpCodeFormat<CR>$/;"	m
<Leader>nm	nvim/init.vim	/^nnoremap <Leader>nm :OmniSharpRename<CR>$/;"	m
<Leader>sp	nvim/init.vim	/^nnoremap <Leader>sp :OmniSharpStopServer<CR>$/;"	m
<Leader>ss	nvim/init.vim	/^nnoremap <Leader>ss :OmniSharpStartServer<CR>$/;"	m
<S-H>	nvim/init.vim	/^map <S-H> :tabp<CR>$/;"	m
<S-L>	nvim/init.vim	/^map <S-L> :tabn<CR>$/;"	m
<S-Left>	nvim/init.vim	/^map <S-Left> :tabp<CR>$/;"	m
<S-Right>	nvim/init.vim	/^map <S-Right> :tabn<CR>$/;"	m
<S-TAB>	nvim/init.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	nvim/init.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<TAB>	nvim/init.vim	/^nmap <silent> <TAB> <Plug>(coc-range-select)$/;"	m
<c-space>	nvim/init.vim	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<cr>	nvim/init.vim	/^inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<leader>a	nvim/init.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	nvim/init.vim	/^nmap <leader>ac  <Plug>(coc-codeaction)$/;"	m
<leader>f	nvim/init.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>qf	nvim/init.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>rn	nvim/init.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<space>a	nvim/init.vim	/^nnoremap <silent> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<space>c	nvim/init.vim	/^nnoremap <silent> <space>c  :<C-u>CocList commands<cr>$/;"	m
<space>e	nvim/init.vim	/^nnoremap <silent> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<space>j	nvim/init.vim	/^nnoremap <silent> <space>j  :<C-u>CocNext<CR>$/;"	m
<space>k	nvim/init.vim	/^nnoremap <silent> <space>k  :<C-u>CocPrev<CR>$/;"	m
<space>o	nvim/init.vim	/^nnoremap <silent> <space>o  :<C-u>CocList outline<cr>$/;"	m
<space>p	nvim/init.vim	/^nnoremap <silent> <space>p  :<C-u>CocListResume<CR>$/;"	m
<space>s	nvim/init.vim	/^nnoremap <silent> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
Compile	nvim/init.vim	/^func! Compile()$/;"	f
Fcitx2en	nvim/init.vim	/^function! Fcitx2en()$/;"	f
Fold	nvim/init.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Format	nvim/init.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
K	nvim/init.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
OR	nvim/init.vim	/^command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
Prettier	nvim/init.vim	/^command! -nargs=0 Prettier :CocCommand prettier.formatFile$/;"	c
Rename	nvim/init.vim	/^command! -nargs=1 Rename :call OmniSharp#RenameTo("<args>")$/;"	c
Rungdb	nvim/init.vim	/^func! Rungdb()$/;"	f
[g	nvim/init.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
]g	nvim/init.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
af	nvim/init.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
check_back_space	nvim/init.vim	/^function! s:check_back_space() abort$/;"	f
g:OmniSharp_server_stdio	nvim/init.vim	/^let g:OmniSharp_server_stdio = 1$/;"	v
g:OmniSharp_timeout	nvim/init.vim	/^let g:OmniSharp_timeout = 5$/;"	v
g:airline#extensions#tabline#enabled	nvim/init.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline_powerline_fonts	nvim/init.vim	/^let g:airline_powerline_fonts = 1$/;"	v
g:ale_linters	nvim/init.vim	/^let g:ale_linters = { 'cs': ['OmniSharp'] }$/;"	v
g:coc_global_extensions	nvim/init.vim	/^let g:coc_global_extensions=[$/;"	v
g:input_toggle	nvim/init.vim	/^let g:input_toggle = 1$/;"	v
g:omnicomplete_fetch_full_documentation	nvim/init.vim	/^let g:omnicomplete_fetch_full_documentation = 1$/;"	v
g:polyglot_disabled	nvim/init.vim	/^let g:polyglot_disabled = [$/;"	v
g:rbpt_colorpairs	nvim/init.vim	/^let g:rbpt_colorpairs = [$/;"	v
g:rbpt_loadcmd_toggle	nvim/init.vim	/^let g:rbpt_loadcmd_toggle = 0$/;"	v
g:rbpt_max	nvim/init.vim	/^let g:rbpt_max = 8$/;"	v
g:vim_jsx_pretty_colorful_config	nvim/init.vim	/^let g:vim_jsx_pretty_colorful_config = 1 " default 0$/;"	v
g:vue_pre_processors	nvim/init.vim	/^let g:vue_pre_processors = []$/;"	v
gd	nvim/init.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gi	nvim/init.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gr	nvim/init.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	nvim/init.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
if	nvim/init.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
mygroup	nvim/init.vim	/^augroup mygroup$/;"	a
omnisharp_commands	nvim/init.vim	/^augroup omnisharp_commands$/;"	a
show_documentation	nvim/init.vim	/^function! s:show_documentation()$/;"	f
